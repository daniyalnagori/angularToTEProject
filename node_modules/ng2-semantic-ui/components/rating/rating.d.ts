import { EventEmitter } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
export declare class SuiRating {
    ratingClasses: boolean;
    private _value;
    private _max;
    max: any;
    private readonly icons;
    valueChange: EventEmitter<number>;
    private _hoveredIndex;
    private mouseover(i);
    private mouseout();
    private click(i);
    isReadonly: boolean;
    writeValue(value: number): void;
}
export declare const CUSTOM_VALUE_ACCESSOR: any;
export declare class SuiRatingValueAccessor implements ControlValueAccessor {
    private host;
    onChange: () => void;
    onTouched: () => void;
    constructor(host: SuiRating);
    writeValue(value: any): void;
    registerOnChange(fn: () => void): void;
    registerOnTouched(fn: () => void): void;
}
export declare const SUI_RATING_DIRECTIVES: (typeof SuiRating | typeof SuiRatingValueAccessor)[];
